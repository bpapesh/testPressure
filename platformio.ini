; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter, extra scripting
;   Upload options: custom port, speed and extra flags
;   Library options: dependencies, extra library storages
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
env_default = release

;
; Configuration
; PLEASE REPLACE ALL (bintray/wifi) *** WITH REAL VALUES
; or use environemnt variables
; http://docs.platformio.org/page/projectconf/dynamic_variables.html
;

; Please navigate to https://bintray.com/, create an account,
; repository, and add a package where PlatformIO will deploy firmwares
; api_token =  Bintray.com > Edit Profile > API Key
; Example for rhttps://bintray.com/ivankravets/platformio-ota/bintray-secure-ota
[bintray]
user = bpapesh
repository = testTravisOTA
package = testPackage
; api_token = ***
api_token = BINTRAY_API_TOKEN

; Wi-Fi network settings
[wifi]
; ssid = ***
; password = ***
ssid = PIO_WIFI_SSID
password = PIO_WIFI_PASSWORD

[common]
platform = https://github.com/platformio/platform-espressif32.git

; firmware version, please modify it between releases
; positive integer value
release_version = 1

; build configuration based on Bintray and Wi-Fi settings
build_flags =
    '-DWIFI_SSID="${wifi.ssid}"'
    '-DWIFI_PASS="${wifi.password}"'
    '-DBINTRAY_USER="${bintray.user}"'
    '-DBINTRAY_REPO="${bintray.repository}"'
    '-DBINTRAY_PACKAGE="${bintray.package}"'

; extra dependencies
lib_deps = ArduinoJson

;
; Build environments
;

[env:debug]
platform = ${common.platform}
framework = arduino
board = esp32dev
build_flags =
    ${common.build_flags}
    -DVERSION=0
lib_deps = ${common.lib_deps}
monitor_speed = 115200
upload_speed = 921600
; upload_protocol = olimex-arm-usb-tiny-h
; debug_tool = olimex-arm-usb-tiny-h

[env:release]
platform = ${common.platform}
framework = arduino
board = esp32dev
build_flags =
    ${common.build_flags}
    -DVERSION=${common.release_version}
lib_deps = ${common.lib_deps}
upload_protocol = custom
extra_scripts = pre:publish_firmware.py
